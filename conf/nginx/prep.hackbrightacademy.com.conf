# Serve frodo.
#
# This is mostly proxied to uWSGI, serving the Django app.
# We serve /static/ and /media/ directly here by reading those files off disk.


server {
    listen 80;
    listen 443 ssl;

    ssl_certificate         /etc/letsencrypt/live/prep.hackbrightacademy.com/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/prep.hackbrightacademy.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/prep.hackbrightacademy.com/fullchain.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;

    server_name prep.hackbrightacademy.com

    access_log /var/log/nginx/prep.hackbrightacademy.com_access.log;
    error_log  /var/log/nginx/prep.hackbrightacademy.com_error.log;

    # allow uploads up to 7 megabytes
    client_max_body_size 7M;

    # Allow for automatic HTTPS/TSL renewal
    #
    # having this allows to use letsencrypt's autoamtic-provide-we-own-this-domain
    #
    # you can get cert with
    # sudo letsencrypt certonly --webroot -w /var/www/html -d prep.hackbrightacademy.com
    location /.well-known/acme-challenge/ { root /var/www/html; }

    # Django ensures we get unique names for different versions of static stuff, so we
    # will ask the browser to cache things for 30 days.
    location /static/  { root /home/django/prep.hackbrightacademy.com/; expires 30d; }

    # Django-imagekit stuff has unique names---we can cache this for a long time
    location /media/CACHE/  { root /home/django/prep.hackbrightacademy.com/; expires 30d; }

    # Other media stuff might change at any time, so no caching.
    location /media/   { root /home/django/prep.hackbrightacademy.com/; }

    # Fake location so we can use Django's error templates directly off disk
    location /errors/  { alias /home/django/prep.hackbrightacademy.com/project/templates/; }

    location /materials/ {
        alias /home/materials/prep.hackbrightacademy.com/;
        index index.html index.htm;
        autoindex on;
        # Attempt to serve as file, then as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
    }

    # Proxy site to Django
    location / {
        uwsgi_pass  unix:///var/run/uwsgi/app/prep.hackbrightacademy.com/socket;
        include     uwsgi_params;
    }

    error_page 502 /errors/502-nginx.html;    # For "maintenance mode" -- uwsgi is down
    error_page 404 /errors/404-nginx.html;    # Handle /static/ & /media/ 404
    error_page 403 /errors/404-nginx.html;    # Handle /static/ & /media/ directory searches
}
